@page
@model ControlModel
@{
    ViewData["Title"] = "piperpicker";
}
@Html.AntiForgeryToken()
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}
@section Styles {
    <link href="@Url.Content("~/css/control.css")" rel="stylesheet" type="text/css" />
}
@section Scripts {
    <script>
        $.ajax({
            type: "GET",
            url: "api/mopidy/playstate",
            headers:
            {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: (playstate) => {
                reportPlayState(playstate.state);
            },
            error: (errorResponse) => {
                reportPlayState('error');
            }
        });

        $("#currentTrack").load("?handler=CurrentTrack");

    </script>
}

<div class="row">
    <div class="title-container">
        <h3>Control</h3>
    </div>
    <div class="status-container">
        <p id="currentTrack"></p>
        <p id="playState"></p>
    </div>
    <div class="controls-container">
        <img class="icon" src="/images/play-pause.svg" onclick="togglePlay()"/>
    </div>
</div>

<script>
    function togglePlay() {
        reportPlayState("submitted");

        $.ajax({
                type: "POST",
                url: "api/mopidy/togglepause",
                headers:
                {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: (toggleResult) => {reportPlayState(toggleResult.state);},
                error: (errorResponse) => {
                    reportPlayState('error');
                }
            });
    }

    function reportPlayState(playState) {
        var element = document.getElementById('playState');
        element.innerText = playState;
    }

</script>
