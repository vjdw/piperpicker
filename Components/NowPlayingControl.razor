@using System.Net.WebSockets;
@using piperpicker.Components
@using PiperPicker.Proxies
@using static PiperPicker.Proxies.MopidyProxy;

@inject MopidyProxy MopidyProxy
@inject ILogger<NowPlayingControl> Logger

<div class="stackable" @onclick="PauseButtonClickHandler">
    <p>@_mopidyNowPlayingState.TrackName</p>
    <p>@_mopidyNowPlayingState.TrackDescription</p>
    <p>Playing: @_mopidyNowPlayingState.IsPlaying</p>
</div>

@code {
    private ClientWebSocket _cws;
    private Timer _timer;
    private MopidyNowPlayingState _mopidyNowPlayingState = new MopidyNowPlayingState(false, "-", "-");

    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            MopidyProxy.OnMopidyNotification += MopidyNotificationHandler;
        }

        base.OnAfterRender(firstRender);
    }

    private void MopidyNotificationHandler(object sender, MopidyNotificationEventArgs notification)
    {
        InvokeAsync(() =>
        {
            _mopidyNowPlayingState = notification.GetInfo();
            StateHasChanged();
        });
    }

    private async void PauseButtonClickHandler()
    {
        await MopidyProxy.TogglePause();
    }
}
