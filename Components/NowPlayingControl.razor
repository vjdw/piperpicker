@using System.Net.WebSockets;
@using piperpicker.Components
@using PiperPicker.Proxies
@using static PiperPicker.Proxies.MopidyProxy;

@inject MopidyProxy MopidyProxy
@inject ILogger<NowPlayingControl> Logger

<div class="stackable">
    <div>
        <span id="trackname">@_mopidyNowPlayingState.TrackName</span>
        <br />
        <span id="trackdescription">@(_mopidyNowPlayingState.TrackDescription ?? "")</span>
    </div>

    <div class="icons-container">
        <div class="icon seek-back" @onclick="SeekBackButtonClickHandler"></div>
        <div class="icon seek-forward" @onclick="SeekForwardButtonClickHandler"></div>
        <div class="icon playpause @playPauseIconState" @onclick="PauseButtonClickHandler"></div>
    </div>
</div>

@code {
    private MopidyNowPlayingState _mopidyNowPlayingState = new MopidyNowPlayingState(false, "-", "-", "file:///");
    private string playPauseIconState = "pause";

    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            HandleNewState(await MopidyProxy.GetNowPlaying());
            MopidyProxy.OnMopidyNotification += MopidyNotificationHandler;
            StateHasChanged();
        }

        base.OnAfterRender(firstRender);
    }

    private void MopidyNotificationHandler(object sender, MopidyNotificationEventArgs notification)
    {
        InvokeAsync(() =>
        {
            HandleNewState(notification.GetInfo());
            StateHasChanged();
        });
    }

    private void HandleNewState(MopidyNowPlayingState mopidyNowPlayingState)
    {
        _mopidyNowPlayingState = mopidyNowPlayingState;
        playPauseIconState = _mopidyNowPlayingState.IsPlaying ? "pause" : "play";
    }

    private async void PauseButtonClickHandler()
    {
        await MopidyProxy.TogglePause();
    }

    private async void SeekBackButtonClickHandler()
    {
        await MopidyProxy.SeekRelative(-20000);
    }
    private async void SeekForwardButtonClickHandler()
    {
        await MopidyProxy.SeekRelative(10000);
    }
}
